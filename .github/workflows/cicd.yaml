name: CICD Pipeline for BFMF TAXES

on:
    push:
      branches: ["develop"]

env:
  GITHUB_TOKEN: ${{ secrets.PASS }}  
  PROJECT_NAMESPACE: "bfmf"
  PROJECT_NAME: "bfmftaxes"
  CONTAINER_NAME: "bfmf-taxes"
  AZURE_CONTAINER_REGISTRY: "soonacr"  
  CONTAINER_RESOURCE_GROUP: "es-connectivity-westeurope"
  KUBERNETES_RESOURCE_GROUP: "development"
  CONTAINER_REGISTRY_SUBSCRIPTION: ${{ secrets.CONTAINER_SUBSCRIPTION }}
  KUBERNETES_CLUSTER_SUBSCRIPTION: ${{ secrets.SDLC_CLUSTER_SUBSCRIPTION }}
  CLUSTER_NAME: "es-sdlc-k8s"
  CHART_PATH: "oci://soonacr.azurecr.io/helm/soon"
  CHART_OVERRIDE_PATH: "values.yaml"  

jobs:
    #sonar-cloud:
    #    runs-on: ubuntu-latest
    #    steps:
    #    - uses: actions/checkout@v4
    #      with:
    #        # Disabling shallow clone is recommended for improving relevancy of reporting
    #        fetch-depth: 0
    #    - name: SonarCloud Scan
    #      uses: sonarsource/sonarcloud-github-action@master
    #      env:            
    #        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    maven-build:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write         
        steps:
            - uses: actions/checkout@v4

            - uses: actions/checkout@v4
              name: Checkout maven-settings repository
              with:
                repository: soOn-es/maven-settings
                token: ${{ secrets.PASS }}
                path: mvn-settings

            - name: Set up JDK 20
              uses: actions/setup-java@v4
              with:
                java-version: '20.0.2'
                distribution: 'oracle'       
                server-username: ${{ github.actor }}
                server-password: ${{ secrets.GITHUB_TOKEN }}
                overwrite-settings: false                                      
            
            - name: Build with Maven              
              run: |               
               mvn -B package -f ${{ env.PROJECT_NAME }}/pom.xml -s mvn-settings/settings.xml -DskipTests

            - name: 'Upload Artifact'
              uses: actions/upload-artifact@v4              
              with:
                name: package
                path: ${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}-web/target/*.jar                                  

            - name: Publish to GitHub Packages Apache Maven
              run: |                 
                mvn -B deploy -f ${{ env.PROJECT_NAME }}/pom.xml -s mvn-settings/settings.xml -DskipTests -DaltDeploymentRepository=github::https://maven.pkg.github.com/soOn-es/maven-packages
    build-Image:
      permissions:
        contents: read
        id-token: write
      runs-on: self-hosted
      needs: [maven-build]
      steps:
        # Checks out the repository this file is in
        - uses: actions/checkout@v3
        
        - name: Install az cli and helm
          run: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            sudo az aks install-cli          
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
        # Logs in with your Azure credentials
        - name: Azure login
          uses: azure/login@v1.4.6
          with:
            creds: '${{ secrets.AZURE_CREDENTIALS }}'
  
        # Builds and pushes an image up to your Azure Container Registry
        #SHA=${{ github.sha }}
        #TAG=${SHA::7}            
        - uses: actions/download-artifact@v4
          with:
            name: package
        - id: commit
          uses: prompt/actions-commit-hash@v3
        - name: Build and push image to ACR
          run: |          
            mv *.jar ${{ env.PROJECT_NAME }}/                        
            az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
            az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ steps.commit.outputs.short }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.CONTAINER_RESOURCE_GROUP }} --subscription ${{ env.CONTAINER_REGISTRY_SUBSCRIPTION }} --file ${{ env.PROJECT_NAME }}/Dockerfile ${{ env.PROJECT_NAME }}/
    
    deploy:
      permissions:
        actions: read
        contents: read
        id-token: write
      runs-on: self-hosted
      needs: [build-Image]
      steps:
        # Checks out the repository this file is in
        - uses: actions/checkout@v3
  
        - name: Install az cli and helm
          run: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            sudo az aks install-cli          
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
  
        # Logs in with your Azure credentials
        - name: Azure login
          uses: azure/login@v1.4.6
          with:
            creds: '${{ secrets.AZURE_CREDENTIALS }}'
        
        - name: Check az account
          run: az account show
  
        # Use kubelogin to configure your kubeconfig for Azure auth
        - name: Set up kubelogin for non-interactive login
          uses: azure/use-kubelogin@v1
          with:
            kubelogin-version: 'v0.0.32'
  
        # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
        - name: Get K8s context
          uses: azure/aks-set-context@v3
          with:
            resource-group: ${{ env.KUBERNETES_RESOURCE_GROUP }}
            cluster-name: ${{ env.CLUSTER_NAME }}
            admin: 'false'
            use-kubelogin: 'true'
            subscription: ${{ env.KUBERNETES_CLUSTER_SUBSCRIPTION }}          
  
        - name: Helm pull
          run: |
            az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
            helm pull oci://soonacr.azurecr.io/helm/soon -d . --untar
            ls -l
        # Runs Helm to create manifest files
        - name: Bake deployment
          uses: azure/k8s-bake@v2
          with:
            renderEngine: "helm"
            helmChart: soon/
            overrideFiles: ${{ env.PROJECT_NAME }}/values.yaml
            overrides: |
              replicas:1
            helm-version: "latest"
            releaseName: ${{ env.CONTAINER_NAME }}
          id: bake

        - id: commit
          uses: prompt/actions-commit-hash@v3
  
        # Deploys application based on manifest files from previous step
        - name: Deploy application
          uses: Azure/k8s-deploy@v4
          with:
            action: deploy
            namespace: ${{ env.PROJECT_NAMESPACE }}
            manifests: ${{ steps.bake.outputs.manifestsBundle }}            
            images: |
              ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ steps.commit.outputs.short }}
